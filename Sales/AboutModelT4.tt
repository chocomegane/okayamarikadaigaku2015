<#@ template debug="true" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ include file="./T4WarningComment.txt" #>
using System;
using System.Reflection;

namespace Sales
{
    static class AboutModel
	{
<# foreach(Field x in _fields) { #>
        public static string <#=x.Name#>
		{
		    get
			{
			    <#=x.Type#> a =
				    GetExecutingAssemblCustomAttributes<<#=x.Type#>>();
				return (a == null) ? "" : a.<#=x.Name#>;

			}
		}
<# } #>
        
		public static string Version
		{
		    get
			{
			    return MyAssembly.GetName().Version.ToString();
			}
		}

		private static T GetExecutingAssemblCustomAttributes<T>()
		    where T : Attribute
		{
		    object[] attributes =
			    MyAssembly.GetCustomAttributes(typeof(T), false);
			if (attributes.Length == 0) return null;
			return (T)attributes[0];
		}

		private static Assembly MyAssembly
		{
		    get
			{
			    return Assembly.GetExecutingAssembly();
			}
		}
	}
}

<#+
    class Field
	{
	    public string Name { get; set; }
		public string Type { get; set; }

	}

	private static Field[] _fields =
	{
	    new Field
		{
		    Name = "Title",
			Type = "AssemblyTitleAttribute"
		},

		new Field
		{
		    Name = "Product",
			Type = "AssemblyProductAttribute"

		},

		new Field
		{
		    Name = "Copyright",
			Type = "AssemblyCopyrightAttribute"
		},

		new Field
		{
		    Name = "Company",
			Type = "AssemblyCompanyAttribute"

		},

		new Field
		{
		    Name = "Description",
			Type = "AssemblyDescriptionAttribute"
		}
	};
#>